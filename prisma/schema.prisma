// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "env(\"DATABASE_URL\")"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  orders        Order[]
  downloads     Download[]
}

model Product {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float
  category    String
  image       String?
  fileUrl     String
  fileSize    String
  fileType    String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  orderItems  OrderItem[]
  downloads   Download[]
}

model Order {
  id          String      @id @default(cuid())
  userId      String
  total       Float
  status      OrderStatus @default(PENDING)
  paymentId   String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  user        User        @relation(fields: [userId], references: [id])
  items       OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int     @default(1)
  price     Float
  
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Download {
  id        String   @id @default(cuid())
  userId    String
  productId String
  orderId   String
  fileUrl   String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  COMPLETED
  FAILED
}
